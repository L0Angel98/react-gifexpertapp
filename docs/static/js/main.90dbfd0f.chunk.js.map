{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","style","backgroundColor","border","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,sBAAMC,SATa,SAAAC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACIO,KAAK,OACLC,MAAQT,EACRU,YAAa,4BACbC,SAlBkB,SAAAR,GACxB,IAAOM,EAASN,EAAES,OAAXH,MACPR,EAAcQ,S,+BCPLI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACE,sBAAKc,UAAU,+DAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECD0B,SAAEA,GAE5B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACTxB,EAAQC,GACLwB,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAAEpB,IAEEqB,EDhB2BK,CAAa1B,GAAlCa,EAAb,EAAQN,KAAca,EAAtB,EAAsBA,QACtB,OACE,qCACE,oBAAIO,MAAO,CAACC,gBAAgB,YAAaC,OAAO,QAASb,UAAU,6CAAnE,SAAiHhB,IAChHoB,GAAW,mBAAGO,MAAO,CAACC,gBAAgB,YAAaC,OAAO,QAASb,UAAU,wCAAlE,wBACZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEPjB,SAASmB,IACtB,MAAoC7C,mBAAS,CAAC,gBAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAKA,OACE,qCACE,8CACE,cAAC,EAAD,CAAaA,cAAeA,IAC9B,uBACF,6BAEI+C,EAAWtB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,W,MCfjBgC,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.90dbfd0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n  const handleInputChange = e => {\r\n    const {value} = e.target;\r\n    setInputValue(value);\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue(\"\")\r\n    }\r\n    \r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          value={ inputValue }\r\n          placeholder={\"You write the Category...\"}\r\n          onChange={handleInputChange}\r\n        />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","export const getGifs = async ( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=nbj2QUo1b7325VMN31E20xSOzo01hpF0`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gift = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gift;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url} ) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInDown animate__delay-1s\">\r\n      <img src={ url } alt={ title }/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data:images , loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3 style={{backgroundColor:\"lightblue\", border:\"none\"}} className=\"card animate__animated animate__fadeInLeft\">{category}</h3>\r\n      {loading && <p style={{backgroundColor:\"lightblue\", border:\"none\"}} className=\"card animate__animated animate__flash\">Loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n      .then( imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      })\r\n  }, [ category ]);\r\n\r\n  return state; // { data:[], loading: true};\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport default function GifExpertApp (){\r\n  const [categories, setCategories] = useState(['Dragon Ball']);\r\n  /*const handleAdd = () =>{\r\n    //setCategories(['HunterXHunter', ...categories])\r\n    setCategories( cats =>['HunterXHunter', ...cats])\r\n  }*/\r\n  return(\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n        <AddCategory setCategories={setCategories} />\r\n      <hr/>\r\n    <ol>\r\n      {\r\n        categories.map(category =>(  \r\n          <GifGrid \r\n            key={category}\r\n            category={category} \r\n          />\r\n          ))\r\n      }\r\n    </ol>\r\n\r\n    </>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}